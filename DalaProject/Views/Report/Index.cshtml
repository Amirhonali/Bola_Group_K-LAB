@using System.Security.Claims
@model IEnumerable<DalaProject.Models.Report>
@{
    ViewData["Title"] = "Отчёты";
}
<h2>Отчёты</h2>

@{
    var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    int currentUserId = !string.IsNullOrEmpty(userIdClaim) ? int.Parse(userIdClaim) : 0;
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Fermer</th>
            <th>Season</th>
            <th>Product</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var report in Model)
        {
            <tr>
                <td>@report.Income</td>
                <td>@report.Fermer?.FullName</td>
                <td>@report.Season?.Name</td>
                <td>@report.Product?.Title</td>
                <td>
                    <a asp-action="Details" asp-route-id="@report.Id">Details</a>
                    @if (User.IsInRole("Fermer") && report.FermerId == currentUserId)
                    {
                        <span> | </span>
                        <a asp-action="Edit" asp-route-id="@report.Id">Edit</a>
                        <span> | </span>
                        <a asp-action="Delete" asp-route-id="@report.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<canvas id="reportChart" width="600" height="300"></canvas>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('reportChart').getContext('2d');
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Select(m => m.Season?.Name ?? "Без сезона"))),
            datasets: [
                {
                    label: 'Доходы',
                    data: @Html.Raw(Json.Serialize(Model.Select(m => m.Income))),
                    borderColor: 'green',
                    fill: false
                },
                {
                    label: 'Расходы',
                    data: @Html.Raw(Json.Serialize(Model.Select(m => m.Expenses))),
                    borderColor: 'red',
                    fill: false
                }
            ]
        }
    });
</script>